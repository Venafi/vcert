name: Makefile CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      
      - name: Setup go
        uses: actions/setup-go@v2

      - name: Linter
        uses: golangci/golangci-lint-action@v2
        with:
          skip-go-installation: true
          
      - name: Make build
        run: make build
        env:
          RELEASE_VERSION: v4.15.2

      - name: Run CMD tests
        run: make cmd_test
        
 #     - name: Run TPP tests
 #       run: make tpp_test
      
 #     - name: Run VaaS tests
 #       run: make cloud_test
 
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: true
          release_name: ${{ github.run_id }}
          tag_name: ${{ github.ref }}
        env:
            GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Linux x86_32 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/linux/vcert86
          asset_name: vcert_linux_32
          asset_content_type: application/octet-stream
          
      - name: Upload Linux x86_64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/linux/vcert
          asset_name: vcert_linux
          asset_content_type: application/octet-stream
              
      - name: Upload Darwin Intel artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/darwin/vcert
          asset_name: vcert_macos
          asset_content_type: application/octet-stream
          
      - name: Upload Windows x86_32 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/window/vcert86.exe
          asset_name: vcert_windows_86.exe
          asset_content_type: application/octet-stream

      - name: Upload Windows x86_64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/window/vcert.exe
          asset_name: vcert_windows.exe
          asset_content_type: application/octet-stream
