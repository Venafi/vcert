// Code generated by MockGen. DO NOT EDIT.
// Source: ../../webclient/caoperations/service (interfaces: CAOperationsServiceWrapper)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/mock_caoperations.go -package=mocks ../../webclient/caoperations/service CAOperationsServiceWrapper
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	service "github.com/Venafi/vcert/v5/pkg/webclient/caoperations/service"
	gomock "go.uber.org/mock/gomock"
)

// MockCAOperationsServiceWrapper is a mock of CAOperationsServiceWrapper interface.
type MockCAOperationsServiceWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockCAOperationsServiceWrapperMockRecorder
	isgomock struct{}
}

// MockCAOperationsServiceWrapperMockRecorder is the mock recorder for MockCAOperationsServiceWrapper.
type MockCAOperationsServiceWrapperMockRecorder struct {
	mock *MockCAOperationsServiceWrapper
}

// NewMockCAOperationsServiceWrapper creates a new mock instance.
func NewMockCAOperationsServiceWrapper(ctrl *gomock.Controller) *MockCAOperationsServiceWrapper {
	mock := &MockCAOperationsServiceWrapper{ctrl: ctrl}
	mock.recorder = &MockCAOperationsServiceWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCAOperationsServiceWrapper) EXPECT() *MockCAOperationsServiceWrapperMockRecorder {
	return m.recorder
}

// RevokeCertificateRequest mocks base method.
func (m *MockCAOperationsServiceWrapper) RevokeCertificateRequest(ctx context.Context, fingerprint string, certificateAuthorityAccountId *string, revocationReason service.RevocationReason, revocationComment *string) (*service.RevokeCertificateRequestResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RevokeCertificateRequest", ctx, fingerprint, certificateAuthorityAccountId, revocationReason, revocationComment)
	ret0, _ := ret[0].(*service.RevokeCertificateRequestResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RevokeCertificateRequest indicates an expected call of RevokeCertificateRequest.
func (mr *MockCAOperationsServiceWrapperMockRecorder) RevokeCertificateRequest(ctx, fingerprint, certificateAuthorityAccountId, revocationReason, revocationComment any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RevokeCertificateRequest", reflect.TypeOf((*MockCAOperationsServiceWrapper)(nil).RevokeCertificateRequest), ctx, fingerprint, certificateAuthorityAccountId, revocationReason, revocationComment)
}
