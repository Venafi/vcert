---
- name: Authenticate to ADFS OAuth2.0 provider using Client Credentials Flow.
  hosts: localhost
  vars: 
    # The value of these variables are specific to the Application that is being automated. 
    # Each application or team should have a separate IDP application integration with separate credentials. 
    # Reuse of the same IDP integration across the entire company is not advised due to the access 
    # the Venafi service account will need to be given inside the TLSPC platform. 
    idp_token_url: <Your ADFS Token URL with https://>
    idp_audience: <Your Audience value>
    idp_client_id: <Your Client ID>
    idp_client_secret: <Your Client Secret> 

  tasks:
  - name: Authenticate to ADFS
    ansible.builtin.uri:
      url: '{{ idp_token_url }}'
      method: POST
      body_format: form-urlencoded
      body: 
      # ADFS's Scope parameter is in format of <audience>/<scope> and provides both to the platform.
      - [ scope, '{{ idp_audience }}/openid']
      # A redirect URI is needed as ADFS uses it along with the Client_id to to determine which 
      # Application Group and Server Application you are authenticating as. 
      # It must match exactly what is in your application group.
      - [ redirect_uri, "http://localhost"]
      - [ client_id, '{{ idp_client_id }}' ]
      - [ client_secret, '{{ idp_client_secret }}' ]
      - [ grant_type, client_credentials ]
      status_code: 200
    register: auth 

- name: Execute VCert Playbook on WebApp Servers
  #hosts: my_app_servers
  hosts: <My inventory>
  vars:
    # The fully qualified path to the Vcert Playbook file is stored here. 
    # This should be the same for all hosts in the chosen inventory. 
    vcert_playbook_path: <Vcert Playbook Fully Qualified Path> 

  tasks: 
  - name : Execute VCert playbook with JWT. 
    shell: vcert run --file '{{ vcert_playbook_path }}'
    environment:
      TLSPC_EXTERNAL_JWT: '{{ auth.json.access_token }}'

